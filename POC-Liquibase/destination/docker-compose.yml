services:
  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: destinationdb
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d destinationdb"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - postgres-data:/var/lib/postgresql/data

  liquibase:
    build:
      context: .
      dockerfile: Dockerfile # ระบุ Dockerfile ที่สร้างขึ้นเอง
    volumes:
      - ./changelog:/liquibase/changelog # Mapping โฟลเดอร์ changelog
      - ./changelog/liquibase.docker.properties:/liquibase/liquibase.docker.properties # Mapping ไฟล์ properties
    depends_on:
      postgres:
        condition: service_healthy # ให้ liquibase รอจนกว่า PostgreSQL พร้อมใช้งาน
    command: --defaults-file=/liquibase/liquibase.docker.properties update # ระบุไฟล์ changelog ที่ต้องใช้

volumes:
  postgres-data:
# docker exec -it destination-postgres-1 psql -U user destinationdb
# CREATE TABLE employees (
#   id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
#   name VARCHAR(225),
#   job_title VARCHAR(225),
#   monthly_salary BIGINT
# );

# docker-compose up -d postgres
# docker-compose run liquibase update
# /Users/Napas/Documents/POC/destination/changelog

# docker run --rm -v /Users/Napas/Documents/POC/destination/changelog:/liquibase/changelog liquibase/--defaults-file=/liquibase/changelog/liquibase.docker.properties update
# docker run --rm \
#   -v \Users\Napas\Documents\POC\destination\changelog:/liquibase/changelog \
#   liquibase/liquibase \
#   --defaults-file=/liquibase/changelog/liquibase.docker.properties \
#   --changelog-file=/liquibase/changelog/changelog.xml update
# docker run --rm -v \Users\Napas\Documents\POC\destination\changelog:\liquibase\changelog liquibase/liquibase --defaults-file=/liquibase/changelog/liquibase.docker.properties update
# chmod 644 /Users/Napas/Documents/POC/destination/changelog/liquibase.docker.properties
